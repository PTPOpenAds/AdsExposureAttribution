// Code generated by protoc-gen-go. DO NOT EDIT.
// source: attribution/proto/user/user.proto

package user

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 用户id类型
type IdType int32

const (
	IdType_RetrievalId     IdType = 0
	IdType_Device          IdType = 1
	IdType_QQOpenId        IdType = 2
	IdType_Wuid            IdType = 3
	IdType_Mac             IdType = 4
	IdType_AndroidId       IdType = 5
	IdType_Qadid           IdType = 6
	IdType_MappedAndroidId IdType = 7
	IdType_MappedMac       IdType = 8
	IdType_Taid            IdType = 9
	IdType_Oaid            IdType = 10
	IdType_HashOaid        IdType = 11
	IdType_Uuid            IdType = 12
)

var IdType_name = map[int32]string{
	0:  "RetrievalId",
	1:  "Device",
	2:  "QQOpenId",
	3:  "Wuid",
	4:  "Mac",
	5:  "AndroidId",
	6:  "Qadid",
	7:  "MappedAndroidId",
	8:  "MappedMac",
	9:  "Taid",
	10: "Oaid",
	11: "HashOaid",
	12: "Uuid",
}

var IdType_value = map[string]int32{
	"RetrievalId":     0,
	"Device":          1,
	"QQOpenId":        2,
	"Wuid":            3,
	"Mac":             4,
	"AndroidId":       5,
	"Qadid":           6,
	"MappedAndroidId": 7,
	"MappedMac":       8,
	"Taid":            9,
	"Oaid":            10,
	"HashOaid":        11,
	"Uuid":            12,
}

func (x IdType) String() string {
	return proto.EnumName(IdType_name, int32(x))
}

func (IdType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4ce649f320108c4b, []int{0}
}

// 用户信息，主要包含支持的id体系
type UserData struct {
	Imei                 string   `protobuf:"bytes,1,opt,name=imei,proto3" json:"imei,omitempty"`
	Idfa                 string   `protobuf:"bytes,2,opt,name=idfa,proto3" json:"idfa,omitempty"`
	QqOpenid             string   `protobuf:"bytes,3,opt,name=qq_openid,json=qqOpenid,proto3" json:"qq_openid,omitempty"`
	Wuid                 string   `protobuf:"bytes,4,opt,name=wuid,proto3" json:"wuid,omitempty"`
	Mac                  string   `protobuf:"bytes,5,opt,name=mac,proto3" json:"mac,omitempty"`
	AndroidId            string   `protobuf:"bytes,6,opt,name=android_id,json=androidId,proto3" json:"android_id,omitempty"`
	Qadid                string   `protobuf:"bytes,7,opt,name=qadid,proto3" json:"qadid,omitempty"`
	MappedAndroidId      []string `protobuf:"bytes,8,rep,name=mapped_android_id,json=mappedAndroidId,proto3" json:"mapped_android_id,omitempty"`
	MappedMac            []string `protobuf:"bytes,9,rep,name=mapped_mac,json=mappedMac,proto3" json:"mapped_mac,omitempty"`
	Taid                 string   `protobuf:"bytes,10,opt,name=taid,proto3" json:"taid,omitempty"`
	Oaid                 string   `protobuf:"bytes,11,opt,name=oaid,proto3" json:"oaid,omitempty"`
	HashOaid             string   `protobuf:"bytes,12,opt,name=hash_oaid,json=hashOaid,proto3" json:"hash_oaid,omitempty"`
	Uuid                 string   `protobuf:"bytes,13,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Ip                   string   `protobuf:"bytes,14,opt,name=ip,proto3" json:"ip,omitempty"`
	Ipv6                 string   `protobuf:"bytes,15,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserData) Reset()         { *m = UserData{} }
func (m *UserData) String() string { return proto.CompactTextString(m) }
func (*UserData) ProtoMessage()    {}
func (*UserData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ce649f320108c4b, []int{0}
}

func (m *UserData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserData.Unmarshal(m, b)
}
func (m *UserData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserData.Marshal(b, m, deterministic)
}
func (m *UserData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserData.Merge(m, src)
}
func (m *UserData) XXX_Size() int {
	return xxx_messageInfo_UserData.Size(m)
}
func (m *UserData) XXX_DiscardUnknown() {
	xxx_messageInfo_UserData.DiscardUnknown(m)
}

var xxx_messageInfo_UserData proto.InternalMessageInfo

func (m *UserData) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *UserData) GetIdfa() string {
	if m != nil {
		return m.Idfa
	}
	return ""
}

func (m *UserData) GetQqOpenid() string {
	if m != nil {
		return m.QqOpenid
	}
	return ""
}

func (m *UserData) GetWuid() string {
	if m != nil {
		return m.Wuid
	}
	return ""
}

func (m *UserData) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *UserData) GetAndroidId() string {
	if m != nil {
		return m.AndroidId
	}
	return ""
}

func (m *UserData) GetQadid() string {
	if m != nil {
		return m.Qadid
	}
	return ""
}

func (m *UserData) GetMappedAndroidId() []string {
	if m != nil {
		return m.MappedAndroidId
	}
	return nil
}

func (m *UserData) GetMappedMac() []string {
	if m != nil {
		return m.MappedMac
	}
	return nil
}

func (m *UserData) GetTaid() string {
	if m != nil {
		return m.Taid
	}
	return ""
}

func (m *UserData) GetOaid() string {
	if m != nil {
		return m.Oaid
	}
	return ""
}

func (m *UserData) GetHashOaid() string {
	if m != nil {
		return m.HashOaid
	}
	return ""
}

func (m *UserData) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UserData) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *UserData) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

func init() {
	proto.RegisterEnum("user.IdType", IdType_name, IdType_value)
	proto.RegisterType((*UserData)(nil), "user.UserData")
}

func init() { proto.RegisterFile("attribution/proto/user/user.proto", fileDescriptor_4ce649f320108c4b) }

var fileDescriptor_4ce649f320108c4b = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x41, 0x6b, 0xdb, 0x30,
	0x14, 0xc7, 0x17, 0xdb, 0x71, 0xac, 0x97, 0xb4, 0xd1, 0xb4, 0x1d, 0x04, 0xa3, 0xd0, 0xf5, 0x54,
	0x7a, 0x70, 0x0e, 0x83, 0xee, 0xdc, 0xd1, 0xc3, 0x72, 0x08, 0x25, 0x21, 0x65, 0x30, 0x18, 0x41,
	0xf1, 0x53, 0x17, 0xc1, 0x6c, 0xcb, 0x8e, 0xec, 0xb1, 0x6f, 0xb5, 0xcf, 0xb6, 0x4f, 0x30, 0x9e,
	0xe4, 0x95, 0x0c, 0x7a, 0x31, 0x7f, 0xfd, 0xde, 0x7b, 0x96, 0xfe, 0x7f, 0x1e, 0xbc, 0x57, 0xce,
	0xb5, 0x66, 0xdf, 0x39, 0x53, 0x57, 0x0b, 0xdb, 0xd6, 0xae, 0x5e, 0x74, 0x47, 0xdd, 0xfa, 0x4f,
	0xee, 0xcf, 0x22, 0x21, 0x7d, 0xf5, 0x27, 0x82, 0xec, 0xf1, 0xa8, 0xdb, 0x7b, 0xe5, 0x94, 0x10,
	0x90, 0x98, 0x52, 0x1b, 0x39, 0xba, 0x1c, 0x5d, 0xb3, 0x8d, 0xd7, 0x9e, 0xe1, 0x93, 0x92, 0xd1,
	0xc0, 0xf0, 0x49, 0x89, 0x77, 0xc0, 0x9a, 0x66, 0x57, 0x5b, 0x5d, 0x19, 0x94, 0xb1, 0x2f, 0x64,
	0x4d, 0xf3, 0xe0, 0xcf, 0x34, 0xf0, 0xb3, 0x33, 0x28, 0x93, 0x30, 0x40, 0x5a, 0x70, 0x88, 0x4b,
	0x55, 0xc8, 0xb1, 0x47, 0x24, 0xc5, 0x05, 0x80, 0xaa, 0xb0, 0xad, 0x0d, 0xee, 0x0c, 0xca, 0xd4,
	0x17, 0xd8, 0x40, 0x96, 0x28, 0xde, 0xc2, 0xb8, 0x51, 0x68, 0x50, 0x4e, 0x7c, 0x25, 0x1c, 0xc4,
	0x0d, 0xbc, 0x2e, 0x95, 0xb5, 0x1a, 0x77, 0x27, 0xb3, 0xd9, 0x65, 0x7c, 0xcd, 0x36, 0xf3, 0x50,
	0xb8, 0x7b, 0xfe, 0xc3, 0x05, 0xc0, 0xd0, 0x4b, 0x37, 0x33, 0xdf, 0xc4, 0x02, 0x59, 0xa9, 0x82,
	0x5e, 0xe9, 0x94, 0x41, 0x09, 0xe1, 0x95, 0xa4, 0x89, 0xd5, 0xc4, 0xa6, 0x81, 0x91, 0x26, 0xab,
	0x07, 0x75, 0x3c, 0xec, 0x7c, 0x61, 0x16, 0xac, 0x12, 0x78, 0x18, 0x06, 0x3a, 0xb2, 0x7a, 0x16,
	0x06, 0x48, 0x8b, 0x73, 0x88, 0x8c, 0x95, 0xe7, 0x9e, 0x44, 0xc6, 0xfa, 0xfc, 0x6c, 0x7f, 0x2b,
	0xe7, 0x43, 0x7e, 0xb6, 0xbf, 0xbd, 0xf9, 0x3d, 0x82, 0x74, 0x89, 0xdb, 0x5f, 0x56, 0x8b, 0x39,
	0x4c, 0x37, 0xda, 0xb5, 0x46, 0xf7, 0xea, 0xc7, 0x12, 0xf9, 0x2b, 0x01, 0x90, 0xde, 0xeb, 0xde,
	0x14, 0x9a, 0x8f, 0xc4, 0x0c, 0xb2, 0xf5, 0x9a, 0x62, 0x5d, 0x22, 0x8f, 0x44, 0x06, 0xc9, 0x97,
	0xce, 0x20, 0x8f, 0xc5, 0x04, 0xe2, 0x95, 0x2a, 0x78, 0x22, 0xce, 0x80, 0x3d, 0x3b, 0xe6, 0x63,
	0xc1, 0x60, 0xbc, 0xa6, 0xa0, 0x78, 0x2a, 0xde, 0xc0, 0x7c, 0xf5, 0x7f, 0x22, 0x7c, 0x42, 0xed,
	0xab, 0x7f, 0x09, 0xf0, 0x8c, 0x7e, 0xb8, 0x55, 0x06, 0x39, 0x23, 0x45, 0x86, 0x38, 0xd0, 0x95,
	0x9f, 0x07, 0x7b, 0x7c, 0x4a, 0xfc, 0x91, 0xae, 0x9c, 0x7d, 0xfa, 0x06, 0x57, 0x45, 0x5d, 0xe6,
	0x4e, 0x57, 0x85, 0xae, 0x5c, 0x7e, 0xb2, 0x5e, 0x61, 0x9d, 0x72, 0xda, 0xa6, 0xaf, 0x1f, 0xbf,
	0x1b, 0x77, 0xe8, 0xf6, 0x79, 0x51, 0x97, 0x8b, 0x6d, 0x68, 0xbd, 0xc3, 0xc5, 0xe9, 0x2e, 0xbe,
	0xbc, 0x97, 0xfb, 0xd4, 0xeb, 0x0f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x45, 0xf5, 0xf1, 0xaf,
	0xb8, 0x02, 0x00, 0x00,
}
